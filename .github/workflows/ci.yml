
name: CI Pipeline

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      zookeeper:
        image: confluentinc/cp-zookeeper:7.5.0
        ports:
          - 2181:2181
        env:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

      kafka:
        image: confluentinc/cp-kafka:7.5.0
        ports:
          - 9092:9092
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        options: >-
          --health-cmd "cub kafka-ready -b localhost:9092 1 30"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
      KAFKA_TOPIC: fhir-events

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort mypy pytest pytest-asyncio httpx aiokafka

      - name: Lint with black
        run: black --check app tests

      - name: Sort imports with isort
        run: isort --check-only app tests

      - name: Type check with mypy
        run: mypy app

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -v

